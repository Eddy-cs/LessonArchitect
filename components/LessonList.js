import { Fragment, useState } from "react";
import {
  Card,
  CardContent,
  Typography,
  IconButton,
  Tooltip,
} from "@mui/material";
import Avatar from "@mui/material/Avatar";
import AspectRatioIcon from "@mui/icons-material/AspectRatio";
import ListAltOutlinedIcon from "@mui/icons-material/ListAltOutlined";
import ContentCopyIcon from "@mui/icons-material/ContentCopy";
import Table from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableCell from "@mui/material/TableCell";
import TableContainer from "@mui/material/TableContainer";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";
import Paper from "@mui/material/Paper";

function LessonList(props) {
  const [expand, setExpand] = useState(false);
  const [singleContent, setSingleContent] = useState();
  console.log(props);

  function viewLesson(lessonData) {
    setSingleContent(
      <Card key={lessonData.timestamp}>
        <CardContent sx={{ paddingBottom: 1 }}>
          <Typography variant="h5">{lessonData.lessonTitle}</Typography>
          <div
            style={{
              display: "grid",
              gridAutoFlow: "column",
              justifyContent: "start",
              alignItems: "center",
              gap: 10,
              paddingTop: 3,
            }}
          >
            <Avatar
              sx={{ width: 24, height: 24 }}
              src={lessonData.user && lessonData.user.photoURL}
            ></Avatar>
            <Typography variant="subtitle1">
              Generated by{" "}
              {props.lessons.displayName
                ? props.lessons.displayName
                : "Anonymous"}
            </Typography>
          </div>
          <Tooltip title="List">
            <IconButton onClick={() => setExpand(false)}>
              <ListAltOutlinedIcon color="primary" fontSize="medium" />
            </IconButton>
          </Tooltip>
          <Tooltip title="Copy to clipboard">
            <IconButton
              variant="outlined"
              onClick={() => {
                navigator.clipboard.writeText(lessonData.generatedLesson);
              }}
            >
              <ContentCopyIcon color="primary" fontSize="medium" />
            </IconButton>
          </Tooltip>
        </CardContent>

        <CardContent>
          <Typography
            sx={{ whiteSpace: "pre-line", marginTop: -3 }}
            variant="body1"
          >
            {lessonData.generatedLesson}
          </Typography>
        </CardContent>
      </Card>
    );
    setExpand(true);
  }

  return expand ? (
    <Fragment>
      <h1>{singleContent}</h1>
    </Fragment>
  ) : (
    <Fragment>
      <TableContainer component={Paper}>
        <Table sx={{ minWidth: 650 }} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell align="center">Actions</TableCell>
              <TableCell>Lesson</TableCell>
              <TableCell align="right">Subject</TableCell>
              <TableCell align="right">Grade</TableCell>
              <TableCell align="right">Date</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {props.lessons.generatedLessons.map((row, index) => (
              <TableRow
                key={index}
                sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
              >
                <TableCell
                  align="right"
                  sx={{ display: "grid", gridTemplateColumns: "1fr 1fr" }}
                >
                  <Tooltip title="Expand">
                    <IconButton
                      variant="outlined"
                      onClick={() => viewLesson(row)}
                    >
                      <AspectRatioIcon color="primary" fontSize="small" />
                    </IconButton>
                  </Tooltip>
                </TableCell>
                <TableCell component="th" scope="row">
                  {row.lessonTitle}
                </TableCell>
                <TableCell align="right">{row.subject}</TableCell>
                <TableCell align="right">{row.grade}</TableCell>
                <TableCell align="right">
                  {new Date(row.timestamp.seconds * 1000)
                    .toLocaleDateString("en-US", {
                      month: "short",
                      day: "numeric",
                      year: "numeric",
                    })
                    .toString()}
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </Fragment>
  );
}

export default LessonList;
